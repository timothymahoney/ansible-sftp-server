---

# Add Pem key to ssh-agent
# Send vpc_id and subnet_id as extra vars

- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  vars:
    vpc_id: vpc-5223d735
    subnet_id: subnet-dcd399aa
    key_name: sftp
    instance_type: t2.micro
    image: ami-06b5810be11add0e2
    region: us-east-1

  tasks:
    - name: Create security group
      ec2_group:
        name: SFTP Test
        description: A Security group to allow SFTP
        vpc_id: "{{ vpc_id }}"
        region: us-east-1
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
      register: sg_id
    
    - debug: var=sg_id

    - name: Launch instance
      ec2:
         key_name: "{{ key_name | default('sftp') }}"
         group_id: "{{ sg_id.group_id }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: "{{ subnet_id }}"
         assign_public_ip: yes
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 320
      with_items: "{{ ec2.instances }}"




- name: Configure instance(s)
  hosts: launched
  become: True
  gather_facts: True
  vars:
    sftp_users:
      - name: robert
        password: "$1$salty$li5TXAa2G6oxHTDkqx3Dz/" # passpass
        shell: False
        sftp_directories:
        - robert_1
        - robert_2
    sftp_directories:
      - imports
      - exports
      - { name: public, mode: 755 }
      - other

  roles:
    - sftp

# - name: Terminate instances
#   hosts: localhost
#   connection: local
#   tasks:
#     - name: Terminate instances that were previously launched
#       ec2:
#         state: 'absent'
#         instance_ids: '{{ ec2.instance_ids }}'

